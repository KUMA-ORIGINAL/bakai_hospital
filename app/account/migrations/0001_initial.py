# Generated by Django 5.1 on 2025-03-02 09:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя сотрудника')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия сотрудника')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество сотрудника')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
                ('specialization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Специализация')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator('Enter a valid email address.')], verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('telegram_id', models.IntegerField(blank=True, null=True, verbose_name='Telegram ID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('status', models.CharField(max_length=50, verbose_name='Статус (работает/уволен)')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='staffs/photos/%Y/%m/%d/', verbose_name='Фото сотрудника')),
                ('role', models.CharField(blank=True, choices=[('accountant', 'Accountant'), ('doctor', 'Doctor')], default='doctor', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organization', verbose_name='Организация')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.room', verbose_name='Кабинет')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-date_joined',),
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя пациента')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия пациента')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество пациента')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский'), ('other', 'Другой')], max_length=20, verbose_name='Пол')),
                ('photo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фото пациента')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('inn', models.CharField(max_length=20, unique=True, verbose_name='ИНН')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Телефонный номер')),
                ('passport_photo', models.ImageField(blank=True, null=True, upload_to='patients/passport_photos/%Y/%m/%d/', verbose_name='Фото паспорта')),
                ('passport_id', models.CharField(max_length=50, verbose_name='Номер паспорта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
    ]
